apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java-gradle-plugin'

project.group = GROUP_ID
project.archivesBaseName = ARTIFACT_ID
project.version = VERSION_NAME

repositories {
    mavenCentral()
    google()
}

configurations {
    gradleApi
    compile.extendsFrom gradleApi
    gradleApi.extendsFrom groovy
}

dependencies {
    gradleApi gradleApi()
    groovy localGroovy()

    implementation 'com.android.tools.build:builder-test-api:8.2.2'
    implementation 'com.android.tools:annotations:30.2.1'
    implementation 'com.testdroid:testdroid-api:3.13'
    implementation 'com.google.guava:guava:31.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'com.android.tools.build:gradle:7.2.1'
    testImplementation 'com.android.tools.build:gradle-core:3.1.4'

    // force newer versions due to security issues in builder-test-api:7.2.1
    implementation 'com.google.protobuf:protobuf-java:3.21.8'

    // force newer versions due to security issues in gradle:7.2.1:
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    testImplementation 'io.netty:netty-codec-http:4.1.96.Final'
    testImplementation 'io.netty:netty-codec-http2:4.1.96.Final'
    testImplementation 'com.google.code.gson:gson:2.9.0'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.apache.commons:commons-compress:1.21'
    testImplementation 'org.jsoup:jsoup:1.15.3'
    testImplementation 'org.jdom:jdom2:2.0.6.1'
    testImplementation 'xerces:xercesImpl:2.12.2'
    testImplementation 'com.google.crypto.tink:tink:1.6.1'

    // force newer versions due to security issues in gradle-core:3.1.4:
    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.0'
    testImplementation 'commons-codec:commons-codec:1.15'
}

gradlePlugin {
    plugins {
        testdroid {
            id = 'testdroid'
            implementationClass = 'com.testdroid.TestDroidPlugin'

        }
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc {
    exclude "**/internal/**"
    options.memberLevel = JavadocMemberLevel.PROTECTED

    title "Testdroid"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

project.ext.sonatypeUsername = hasProperty('sonatypeUsername') ? sonatypeUsername : ""
project.ext.sonatypePassword = hasProperty('sonatypePassword') ? sonatypePassword : ""

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            from components.java

            groupId = GROUP_ID
            artifactId = ARTIFACT_ID
            version = VERSION_NAME

            pom {
                name = POM_NAME
                description = POM_DESCRIPTION
                url = POM_URL

                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEVELOPER_CONNECTION
                }

                licenses {
                    license {
                        name = POM_LICENSE_NAME
                        url = POM_LICENSE_URL
                        distribution = POM_LICENSE_DSITRIBUTIION
                    }
                }

                developers {
                    developer {
                        name = 'Sakari Rautiainen'
                    }
                }
                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEVELOPER_CONNECTION
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = project.ext.sonatypeUsername
                password = project.ext.sonatypePassword
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask(":publishMavenJavaPublicationToMavenRepository") }
    sign publishing.publications.mavenJava
}
